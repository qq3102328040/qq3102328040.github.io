[{"title":"github + hexo搭建博客 （由typecho迁移）","date":"2017-03-06T13:57:56.362Z","path":"2017/03/06/2017-3-6 215800/","text":"千辛万苦把梯子放docker上，想放博客的时候看了下内存，貌似要gg，人穷，就放github上吧。 安装hexo本地安装node.js还是避免不了，装吧。。有点牛逼的是hexo和node的网站全上ipv6了，屌的不行https://hexo.io/zh-cn/docs/index.htmlhttps://nodejs.org/en/ 12345678$ cd d:/hexo$ npm install hexo-cli -g$ hexo init blog$ cd blog$ npm install$ hexo g # 或者hexo generate$ hexo s # 或者hexo server，可以在http://localhost:4000/ 查看# 发现打不开，查了网上很多win10也有这种情况，试了半天，地址使用127.0.0.1:4444解决 更改_config.yml1234deploy: type: git repo: git@github.com:qq3102328040/qq3102328040.github.io.git branch: master 在github上创建qq3102328040.github.io项目使用命令1$ hexo d 即可部署 刚才发现自己的godaddy账号被封了，有时间找客服说下，暂时是上不了域名了。 一开始还想直接把typecho迁移过来着，然后发现静态的页面没办法加密，自己写的记事啥的也不想发出去，所以就把他专门当做技术博客吧，不用迁移了，把技术方面的东西简单的复制一下。 复制完了，快两点了，看了一些以前的博客，断断续续的，不过好记性不如烂笔头这句话确实不假，好多东西记下了就记下了，没记下就忘掉了。看着自己上学期确实没有大二下努力。怎么说，找回自己，继续努力吧。还有，一定得想个办法设置下密码啥的。。。","tags":[]},{"title":"校园网加速+看看墙外面的世界 最终解决方案","date":"2017-03-04T08:40:40.120Z","path":"2017/03/04/2017-3-4 164044/","text":"网上那堆搭建教程都是什么啊，抄来抄去，还都是错的。 ubuntu:14.04 不用centos了，防火墙血蛋疼。 vsftp搭建1234567apt-get updateapt-get install -y vsftpdmkdir /home/ftpuseruseradd -d /home/ftpuser -s /bin/bash ftpuserchown ftpuser /home/ftpuserecho &quot;设置ftpuser密码&quot;passwd ftpuser 修改/etc/vsftpd.conf123456# 可写write_enable=YES# 限制用户到用户目录根节点chroot_local_user=YES# 用户目录根节点可写allow_writeable_chroot=YES 安装docker直接用官方的就行curl -sSL https://get.docker.com/ | sh 调了一天可算可以用了Dockerfile123456789101112131415161718192021222324FROM ubuntu:14.04RUN apt-get update &amp;&amp; \\ apt-get install -y --force-yes -m python-pip python-m2crypto libpcap-dev iptables openjdk-7-jre &amp;&amp;\\ apt-get clean &amp;&amp; \\ rm -rf /var/lib/apt/lists/* RUN pip install shadowsocksRUN mkdir /fsCOPY ./fs/* /fs/COPY start.sh /start.shRUN chmod +x /fs/*.sh &amp;&amp; \\ chmod +x start.shENV SS_SERVER_ADDR ::ENV SS_SERVER_PORT 12088ENV SS_PASSWORD saozhuENV SS_METHOD rc4-md5ENV SS_TIMEOUT 3000EXPOSE $SS_SERVER_PORTCMD [&quot;sh&quot;, &quot;-c&quot;, &quot;/start.sh&quot;] docker run -d -p 150:150/udp -p 12088:12088 -e SS_PASSWORD=你的密码 qq3102328040/shadowsocks-finalspeed","tags":[]},{"title":"八月份","date":"2016-08-01T11:14:00.000Z","path":"2016/08/01/8月份/","text":"#八月份 2016年08月01日18:54:48 &emsp;&emsp;以前没看过直播, 过两天回家, 小平他们也都走了, 无聊的时候就看看, 还挺有意思的, 然后看见了这个直播间http://www.panda.tv/357370, 一个音乐室的直播, 3d音乐, 唱的也挺好, 然后看见在他们身上的一点就是, 他们都在做自己喜欢的事, 每天到工作室唱唱歌, 聊聊天, 生活或许不是多么好, 但从他们的笑声中我听见了欢乐, 这样的生活也挺好的. &emsp;&emsp;好了, 扯淡到此结束. 说说正经的. 两个月没写博客了, 上篇是蛋疼的吐槽npm, 然后就去了学校的大数据实验室, 怎么说, 去的时候期望挺大的, 当然落差也挺大的. 具体也不吐槽了, 心里过一下, 不要写下来, 也不要再去想, 我对事情的判断就是这件事是否对我的成长有作用, 小安有, 不管结果如何, 我还是很感谢小安, 很佩服小安的技术, 然后来大数据实验室, 对研究生, 教师, 和想去这方面发展的人有了一定的认识吧. 也实实在在知道了hadoop spark docker 的存在. &emsp;&emsp;接下来, 8月 回家陪陪老妈, 前端的东西少碰, 想去手动用go实现下finalspeed, 但直接上有点难, 所以可能会看一下ss的源码, go看不懂就看python版的, 有代码看肯定是一件好事. &emsp;&emsp;好了, 不写了, 去把实验室那个jsp的东西写完, 写完后再看看吧, 要还写网页就走人. 估计写网页的面挺大的, 这个其实早不想写了, 代码写的太差了, 完全不追求代码质量和小路只求实现功能, 我都不敢放git上, 但答应要写了就要写完, 自己的事办完了, 要是走人, 至少问心无愧.","tags":[]},{"title":"npm install laravel-elixir 引发的思考","date":"2016-05-30T17:29:00.000Z","path":"2016/05/31/npm install laravel-elixir 引发的思考/","text":"npm install laravel-elixir 引发的思考2016年05月31日00:54:46 &emsp;&emsp;发下时间, 现在应该算是自己比较清醒的时间. 刚刚总结了一下现在用的系统, 从这条把我弄崩溃的命令也过了一段时间, 心里也平静了许多, 现在静下心来想一下, 这也许不只是一条命令的事, 而是自己要走的路. &emsp;&emsp;我自己也曾多次对自己说 我对好多技术都感兴趣, 我不确定以后会做什么, 但是我已经基本上肯定自己应该不会去写前端了. 但是我现在在做什么, 和我所说的, 所认为的一样吗? &emsp;&emsp;今天被一条命令搞懵逼了, 还是要先说一下这条命令, npm是一个包管理软件, 类似pip, yum, composer等等, 应该是一种方向, 发展的趋势, 但是今天在使用这一条命令时, 发现它在下载上万个文件, 校园网渣速度, 等了半个小时, 发现 node_modules 文件夹已经到了几百兆, 它还在不停的下载, 我是npm出了问题, 可能是按照文件列表从头下载了, 于是开始各种百度, 各种修复. 但是到最后发现都没有问题, 于是一点点的尝试, 最后发现问题就在这个larave-elixir上面, 查资料发现这玩意本身就是需要这么多的依赖, 而我的目的仅仅是引入一个bootstrap而已. &emsp;&emsp;之后我就感觉心中一万个草泥马在奔腾, 开发这玩意的人脑洞得多大, 一个引入的东西会比写的代码大十倍以上, 后来感觉不太对, 就先写了点其他的东西, 等冷静下来, 再仔细的思考一下, 才发现, 这不仅仅是一条命令的问题. &emsp;&emsp;这个自己开的laravel5-blog也写了有20天了, 也体验了一把github 20连击的感觉, 其实写的并不多, 每天有时间就写一点, 也导致了这个小项目到现在也没写完, 但是真的, 每天给的时间也不少, 将自己本该学习的时间放在了上面. 到现在我才发现, 其实自己的时间就是这样被浪费掉了, 想想自己这20天, 最蛋疼的就是上bootstrap网站找各种东西, 然后各种搜索使用方法, 还有使用或许以后我根本用不到的神马gulp bower npm, 一脸懵逼, 自己也没有兴趣, 所以写的很慢, 自己学的也很慢. 而自己喜欢的逻辑部分根本没写多少. &emsp;&emsp;有点困了, 写下做法 这个玩意肯定还要写, 因为这是我一直想做的, 得做完它, 但是关于前端的东西要一切从简. 自己也要去找下张老师看看有没有发展方向. 把手头的事捋一捋, 在放暑假之前都弄完了, 这个暑假应该是我最后一个属于自己的暑假了, 不能浪费掉. 晚了, 不想在这说具体的技术, 要保持一颗好奇的心 分配好自己的时间, 该放弃的时候就果断扔. &emsp;&emsp;自己会的很少, 要学的东西很多.好了, 睡觉.","tags":[]},{"title":"ubuntu使用感受","date":"2016-05-30T16:50:00.000Z","path":"2016/05/31/ubuntu使用感受/","text":"ubuntu使用感受&emsp;&emsp;使用ubutnu也快两个月了, 记录下现在的基本配置, 也考虑下是否要再更换系统 软件梯子 finalspeed(大核心) shadowsocks(命令行版(sslocal)) 和finalspeed写到一个脚本里, 方便快捷. shadowsocks-qt5 需要切换的时候用, 不稳定, 会崩 tsocks proxychain 命令行的socks转换软件, 但自己测试不成功, 没有效果 privoxy socks转http代理, 很好用, 安装studio的时候爽翻了 开机使用脚本network.sh1234sudo /opt/lampp/lampp startsudo sslocal -c shadowsocks_config.json -d startsudo privoxy /etc/privoxy/configsudo bash ~/finalspeed.sh 开发 sublime(无法输入中文, 可以通过虚拟键盘和命令行启动的方式解决, 很方便)没的说, 看着就是舒坦, vim最后还是没用起来 phpstorm(需要更改字体和配色, 但还是没有sublime看着舒服)自带linux版本, 好用, md插件也好用, 追踪插件很方便 navicat(中文乱码, 自装字体+设置修改) 这玩意应该是wine出来的, 显示效果不忍直视, 使用也不怎么方便 charles(未注册版会有10秒等待时间和30分钟使用限制)和win版本一样, 好用 android studio(显示效果不忍直视)体积比win版本小很多, 还没怎么写安卓, 那不忍直视的界面也没怎么弄 genymotion(中文输入难, 通病)和win版本一样, 都说会卡, 但没感觉出来. 自己加入.bashrc为了快速启动12345alias phpstorm=&apos;nohup sh /home/sb/Programs/PhpStorm-145.258.2/bin/phpstorm.sh &gt;/dev/null &gt;/dev/null 2&gt;&amp;1 &amp;&apos;alias navicat=&apos;nohup sh /home/sb/Programs/navicat112_mysql_cs_x64/start_navicat &gt;/dev/null &gt;/dev/null 2&gt;&amp;1 &amp;&apos;alias studio=&apos;/home/sb/Programs/AndroidStudio/android-studio/bin/studio.sh &gt;/dev/null &gt;/dev/null 2&gt;&amp;1 &amp;&apos;alias genymotion=&apos;/opt/genymobile/genymotion/genymotion &gt;/dev/null &gt;/dev/null 2&amp;&gt;1 &amp;&apos;alias charles=&apos;/home/sb/Programs/charles/bin/charles &gt;/dev/null &gt;/dev/null 2&gt;&amp;1 &amp;&apos; 系统相关 ubuntu Tweak()可以增加工作区 kde-nm-connection-editor()开启wifi安卓可用, 大赞 字体(懒得写)嘈点太多了, 一口老血 其他 搜狗拼音输入法()感觉还好, 没那闲功夫让自带的输入法养成习惯了 SMplayer()都说非常强大的播放器, 没怎么感觉到, 被win下的potplayer甩开了10条街. WPS()昨天做ppt下的, 挺好用, 感觉不出啥系统差别 网易云音乐()前两天刚出的, 出了就弃了 命令行版 feeluidown kw音乐, 没得说, 业界良心 chrome()竟然没想到…插件通用, 好用到哭 qBittorrent()六维下东西用 uget(代理暂不会用) curl多线程可破校园网, 尚未明白原理 aria2(配置墨迹, 使用方法多样, 不会代理) 挺牛逼的, 可以连uget, 可以连网页客户端, 不可破校园网 Bcloud(代理不会)百度云, 好用 qq(文件路径蛋疼)wine的tm2013, 丑的要死 装着玩 jd-jui opera 各种小工具, 懒得说了. 看pdf的 感受爽的地方 神器的命令行 文件系统舒服 开wifi方便 开关机快 自带两个版本python, 避免折腾 启动软件神速 无毒… 工作区很爽 可以看见windows的磁盘 自带的截图还可以 不爽的地方 整体感觉, 可能习惯了win的字体, 老是感觉跟没装显卡驱动的win一样 字体… 无全局代理 软件匮乏 备选系统黑苹果优点 传说中理想的程序员开发环境 软件丰富, 显示友好 缺点 可能遇到无数的硬件驱动问题 开机慢, 可能运转也慢 貌似集成环境也一般般, 还得折腾 deepin这玩意完全是被网易云音乐勾搭起来的优点 自带全家桶(第一次把全家桶归为优点) wine很方便 界面好评高 缺点 是给小白用的, 可能对开发的支持不怎么好 普遍评价性能差","tags":[]},{"title":"解包了下第三方rom, 然后...","date":"2016-05-22T16:48:00.000Z","path":"2016/05/23/解包了下第三方rom, 然后/","text":"解包了下第三方rom, 然后…&emsp;&emsp;最近感觉手机系统不好用, 就一直在刷机, 但还是各种不好用, 想自己做个包, 或者精简下论坛上大神门的包, 然后就看到了这个… 首先是通过包里面的更改日期发现第三方作者都改了哪些东西, 但不知道具体apk是啥, 就打开虚拟机, 把apk拖进去看看, 然后发现四个很奇怪的应用 图很大, ubuntu也没啥好用的截图软件, 就凑合这用系统快捷键吧.权限大概都是这样 然后,,就给反编译了, 先将apk改名为zip, 将里面的classes.dex拿出来 下载dex2jar工具, 里面有bat和sh两种, 按自己系统选择使用把classes.dex文件放到dex2jar目录内, 使用命令1bash d2j-dex2jar.sh classes.dex 很好理解, 将dex转换为jar包, 得到classes-dex2jar.jar文件.然后用jd-gui工具打开jar包 截图不好弄就不截了, 发现代码做了混淆, 我安卓也只会基础, 看不懂啥, 就随便找找, ..然后就发现了神秘代码1private static final char[] m = &#123; 104, 116, 116, 112, 58, 47, 47, 97, 112, 105, 46, 106, 117, 116, 117, 105, 46, 99, 110, 47, 118, 50, 99, 108, 105, 101, 110, 116 &#125;; 卧槽别逗我好吗,这一看就是ascii码啊, 转码下就是1http://api.jutui.cn/v2client 是个api, 百度了下这个网站…中国最大的移动游戏推广平台…….还一给就是4个,够意思… 看贴吧上说一般推广加这种东西都是为了统计预装应用, 但从权限来看, 肯定不那么简单, 先留着, 等安卓学好了在看. 刷机,,,刷个jj.","tags":[]},{"title":"navicat for mysql ubuntu下菜单中文方格的解决解决方法","date":"2016-04-16T08:59:00.000Z","path":"2016/04/16/navicat for mysql ubuntu下菜单中文方格的解决解决方法/","text":"#navicat for mysql ubuntu下菜单中文方格的解决解决方法 测试了网上说的方法都没有效果发现只有菜单是方格，所以开始摸黑 点击菜单栏第四个按钮的最后一个选项，进入选项页面 将字体全部设为已有字体，重启，完美解决。","tags":[]},{"title":"win8下安装Homestead","date":"2016-04-03T13:51:00.000Z","path":"2016/04/03/win8下安装Homestead/","text":"win8下安装Homestead标签（空格分隔）： php linux 前言以前一直想配一个好的开发环境，但因为太繁琐，自己也不太会配，就一直用wamp，今天没事在看各种科普知识的时候发现了神器Vagrant + Homestead, 好像很牛逼的样子，弄弄试试 Vagrant 支持 vmware 和 vbox 两种虚拟机都装了，但vm是盗版的 看文档上写着 若要使用 VMware provider，你需要同时购买 VMware Fusion / Workstation 及 VMware Vagrant plug-in 的软件授权。使用 VMware 可以在共享文件夹上获得较快的性能。 不知道又会出什么错误，所以就用 vbox 吧。我的系统是win8.1 开始安装方法参见这里， 思想很巧妙，因为安装命令可以指定网址， 但也可以在网址的地方写上本地地址， 所以可以用多线程的下载器下载下来然后本地安装。校园网肯定下不动，用这种方法很好，注意速度。。12345678C:\\Users\\sb&gt;vagrant box add laravel/homestead C:\\Users\\sb\\Downloads\\virtualbox.box==&gt; box: Box file was not detected as metadata. Adding it directly...==&gt; box: Adding box &apos;laravel/homestead&apos; (v0) for provider: box: Unpacking necessary files from: file://C:/Users/sb/Downloads/virtualbox.box box: Progress: 100% (Rate: 50.2M/s, Estimated time remaining: --:--:--)==&gt; box: Successfully added box &apos;laravel/homestead&apos; (v0) for &apos;virtualbox&apos;! git执行1git clone https://github.com/laravel/homestead.git Homestead 凑合着把git bash当bash用了1bash init.sh 然后用户目录里就会多出.homestead目录 不得不吐槽一下，官方文档全是坑，完全没考虑到windows的感受，郁闷半天，发现还需要安装下Composer 下载地址在这里很智能，下一步就行了 安装homestead命令行工具1composer global require &quot;laravel/homestead=~2.0&quot; 成功后执行1homestead init 貌似用这个之后，上面git clone的步骤可以省略了1homestead up 需要一段时间才能开启开启后在地址栏输入1localhost:8000 终于提示123502 Bad Gatewaynginx/1.9.11 我还是第一次看见错误这么高兴的。。。。。 补充：因为ssh不会连又郁闷半天用xshell登陆时，用户名填vagrant选择public key 然后找到用户目录的./ssh下的id_rsa就能直接连进去了。 下面的参考资料都非常牛逼，如果需要更多内容可以看下。 参考资料homestead文档 http://laravel-china.org/docs/5.1/homesteadHomestead 2.0 安装笔记 https://phphub.org/topics/491windows下安装php，git，composer http://www.ekan001.com/articles/39windows安装vagrant 以及 laravel homestead http://www.ekan001.com/articles/40Windows上使用Vagrant打造Laravel Homestead可协同跨平台开发环境 https://wsgzao.github.io/post/vagrant/","tags":[]},{"title":"记录下使用finalspeed提速","date":"2016-04-01T07:28:00.000Z","path":"2016/04/01/记录下使用finalspeed提速/","text":"记录下使用finalspeed提速标签（空格分隔）： linux 前提条件 土豪提供的digital ocean一枚 512内存， 应该是毫无压力 客户端&emsp;&emsp;下载就行了，没什么东西。 服务端小试下速度1234567891011[root@zhan545191424 finalspeed]# wget http://fs.d1sm.net/finalspeed/install_fs.sh--2016-04-01 01:58:04-- http://fs.d1sm.net/finalspeed/install_fs.shResolving fs.d1sm.net... 45.32.241.102Connecting to fs.d1sm.net|45.32.241.102|:80... connected.HTTP request sent, awaiting response... 200 OKLength: 3062 (3.0K) [application/x-sh]Saving to: “install_fs.sh”100%[==========================================================================================&gt;] 3,062 --.-K/s in 0s 2016-04-01 01:58:15 (15.5 MB/s) - “install_fs.sh” saved [3062/3062] 有钱人买的东西就是不一样。。。。 1# chmod +x install_fs.sh 不知道+x什么意思 百度下 维基百科上写的很清楚123456789101112131415operator的符号模式表:Operator 说明+ 为指定的用户类型增加权限- 去除指定用户类型的权限= 设置指定用户权限的设置，即将用户类型的所有权限重新设置permission的符号模式表:模式 名字 说明r 读 设置为可读权限w 写 设置为可写权限x 执行权限 设置为可执行权限X 特殊执行权限 只有当文件为目录文件，或者其他类型的用户有可执行权限时，才将文件权限设置可执行s setuid/gid 当文件被执行时，根据who参数指定的用户类型设置文件的setuid或者setgid权限t 粘贴位 设置粘贴位，只有超级用户可以设置该位，只有文件所有者u可以使用该位 1234567[root@zhan545191424 finalspeed]# lltotal 4-rw-r--r-- 1 root root 3062 Jan 18 05:22 install_fs.sh[root@zhan545191424 finalspeed]# chmod +x install_fs.sh[root@zhan545191424 finalspeed]# lltotal 4-rwxr-xr-x 1 root root 3062 Jan 18 05:22 install_fs.sh #变绿了，挺好玩的 1# ./install_fs.sh 2&gt;&amp;1 | tee install.log 会执行好多东西，需要等一会，查一下这条命令的意思2&gt;&amp;1在使用shadowsocks和netspeeder时都有看到，看起来好像是重定向，百度下发现 2&gt;&amp;1 是将标准出错重定向到标准输出 而tee是重定向输出到多个文件，在这里就是既要将标准输出打印到屏幕上，又要保存在install.log里 安装完会自动启动1FinalSpeed server start success. 安装的文件在根目录中 java写的1234567[root@zhan545191424 finalspeed]# ll /fstotal 2508-rw-r--r-- 1 root root 2547922 Jan 6 21:11 fs.jar-rw-r--r-- 1 root root 42 Dec 5 23:30 restart.sh-rw-r--r-- 1 root root 300 Apr 1 02:04 server.log-rw-r--r-- 1 root root 190 Jan 20 17:17 start.sh-rw-r--r-- 1 root root 74 Dec 5 23:30 stop.sh 常用方法1234# sh /fs/start.sh; tail -f /fs/server.log #启动# sh /fs/stop.sh #停止# sh /fs/restart.sh; tail -f /fs/server.log # 重新启动# tail -f /fs/server.log # 查看日志 作者给的教程真的很全，基本无坑12345678910设置开机启动chmod +x /etc/rc.localvi /etc/rc.local加入sh /fs/start.sh每天晚上3点自动重启crontab -e加入0 3 * * * sh /fs/restart.sh tail命令： 日志查看命令 #ps：卧槽真的好爽啊。。。。。 参考资料：finalspeed项目地址 https://github.com/d1sm/finalspeed客户端教程 http://www.ip4a.com/t/513.html服务端教程 http://www.ip4a.com/t/515.html维基百科chmod https://zh.wikipedia.org/wiki/Chmodlinux shell中”2&gt;&amp;1”含义简析 http://itlab.idcquan.com/linux/command/895416.html我使用过的Linux命令之tee - 重定向输出到多个文件 http://codingstandards.iteye.com/blog/833695tail命令 http://www.cnblogs.com/peida/archive/2012/11/07/2758084.html","tags":[]},{"title":"git服务器搭建过程","date":"2016-03-23T04:43:00.000Z","path":"2016/03/23/git服务器搭建过程/","text":"git服务器搭建过程标签（空格分隔）： 博客 git ##准备活动 [root@iZ281j3obvpZ ~]# clear [root@iZ281j3obvpZ ~]# cat /etc/redhat-release CentOS release 6.5 (Final) [root@iZ281j3obvpZ ~]# git --version git version 1.7.1 安装一堆东西yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel -y ` 更新下git先卸载 yum remove git -y 下载新git wget https://www.kernel.org/pub/software/scm/git/git-2.5.0.tar.gz [root@iZ281j3obvpZ git]# ll total 5300 -rw-r--r-- 1 root root 5423853 Jul 28 2015 git-2.5.0.tar.gz [root@iZ281j3obvpZ git]# cd git-2.5.0 [root@iZ281j3obvpZ git]# ./configure --prefix=/usr/local/git [root@iZ281j3obvpZ git]# make &amp;&amp; make install # 安装时间很长 [root@iZ281j3obvpZ git-2.5.0]# ln -s /usr/local/git/bin/* /usr/bin/ #创建硬链，类似快捷方式 [root@iZ281j3obvpZ git-2.5.0]# git --version #完成 git version 2.5.0 Gitosis配置Gitosis安装要用到 python-setuptools [root@iZ281j3obvpZ git-2.5.0]# yum install python python-setuptools [root@iZ281j3obvpZ git-2.5.0]# cd .. [root@iZ281j3obvpZ git-2.5.0]# git clone git://github.com/res0nat0r/gitosis.git [root@iZ281j3obvpZ git-2.5.0]# cd gitosis/ [root@iZ281j3obvpZ gitosis]# ll total 68 -rw-r--r-- 1 root root 17987 Mar 5 10:45 COPYING drwxr-xr-x 2 root root 4096 Mar 5 10:45 debian -rw-r--r-- 1 root root 236 Mar 5 10:45 etc-event.d-local-git-daemon -rw-r--r-- 1 root root 1854 Mar 5 10:45 example.conf drwxr-xr-x 4 root root 4096 Mar 5 10:45 gitosis -rw-r--r-- 1 root root 1265 Mar 5 10:45 gitweb.conf -rw-r--r-- 1 root root 498 Mar 5 10:45 lighttpd-gitweb.conf -rw-r--r-- 1 root root 180 Mar 5 10:45 MANIFEST.in -rw-r--r-- 1 root root 597 Mar 5 10:45 mirror.conf -rw-r--r-- 1 root root 6954 Mar 5 10:45 README.rst -rwxr-xr-x 1 root root 2169 Mar 5 10:45 setup.py -rw-r--r-- 1 root root 2055 Mar 5 10:45 TODO.rst [root@iZ281j3obvpZ git-2.5.0]# python setup.py install #安装完成 本地公钥管理sb@SB-PC /D/sb_alidata/git #一路回车 $ ssh-keygen -t rsa Generating public/private rsa key pair. Enter file in which to save the key (/c/Users/sb/.ssh/id_rsa): /c/Users/sb/.ssh/id_rsa already exists. Overwrite (y/n)? 弄了半天，以为出问题了，然后把原来的覆盖了也不行，结果检查了一下，路径打错了 sb@SB-PC /D/sb_alidata/git $ scp ~/.ssh/id_rsa.pub root@121.42.11.119:~ root@121.42.11.119&apos;s password: id_rsa.pub 100% 390 0.4KB/s 00:00 在服务器上查看刚才上传的文件 [root@iZ281j3obvpZ git]# ls ~ ftp git id_rsa.pub tb_userspace web_environment [root@iZ281j3obvpZ git]# mv ~/id_rsa.pub ~/git [root@iZ281j3obvpZ git]# ll total 5344 drwxrwxr-x 21 root root 32768 Mar 5 10:39 git-2.5.0 -rw-r--r-- 1 root root 5423853 Jul 28 2015 git-2.5.0.tar.gz drwxr-xr-x 8 root root 4096 Mar 5 10:47 gitosis -rw-r--r-- 1 root root 390 Mar 5 11:07 id_rsa.pub ###Gitosis初始化服务器上生成git用户，使用git用户并初始化gitosis创建git版本管理用户 git 在服务器上为git创建一个账户 [root@iZ281j3obvpZ git]# useradd -c &quot;git version manager&quot; -m -d /home/git -s /bin/bash git [root@iZ281j3obvpZ git]# passwd git 初始化gitosis [root@iZ281j3obvpZ git]# mv id_rsa.pub /home/git/ [root@iZ281j3obvpZ git]# su git [git@iZ281j3obvpZ git]$ gitosis-init &lt; ~/id_rsa.pub [git@iZ281j3obvpZ git]$ chmod 755 /home/git/repositories/gitosis-admin.git/hooks/post-update #添加权限 服务器配置完成 ##git项目管理转到客户端 sb@SB-PC /D/sb_alidata/git $ mkdir ~/gitrepo sb@SB-PC ~`` $ cd gitrepo sb@SB-PC ~/gitrepo $ git clone git@121.42.xxx.xxx:gitosis-admin.git #克隆项目管理仓库 Cloning into &apos;gitosis-admin&apos;... remote: Counting objects: 5, done. remote: Compressing objects: 100% (4/4), done. remote: Total 5 (delta 0), reused 5 (delta 0) Receiving objects: 100% (5/5), done. Checking connectivity... done. 然后工作目录里已经出现gitosis-admin.git项目文件夹了 ###新建项目 $cd ~/gitrepo/gitosis-admin $vim gitosis.conf [group test] # 具有写权限的组名称 writable = test # 该组可写的项目名称 members = liuyan@liuyan-pc #有写权限的组成员 提交到服务器 $git add . $git commit -a -m &quot;add test repo&quot; $git push 创建新项目 $cd ~/repo $mkdir test $cd test #对于新的项目，需要先在本地初始化为 Git 项目，添加要管理的文件并作首次提交 $git init $touch readme 提交到远程服务器 $git add . $git commit -a -m &quot;init test&quot; $git remote add origin git@121.42.xxx.xxx:test.git $git push origin master 服务器上查看 [git@hadoop-slave repositories]$ ls gitosis-admin.git test.git 关于多个成员因为暂时用不到，就不写了，可以参考这位大牛的博客yanliu.org我搭的这次基本上是照着这个博客上搭的。","tags":[]},{"title":"lamp配置和安装owncloud","date":"2016-03-18T17:05:00.000Z","path":"2016/03/19/lamp配置和安装owncloud/","text":"lamp配置和安装owncloud标签（空格分隔）： linux 准备&emsp;&emsp;上课无聊，随便百度，发现owncloud这个东西，感觉挺好玩的，搭搭试试。条件 ranmode vps 一枚 128MB内存，不知道能不能用 先查看一下已经安装的软件 1234[root@codeshit ~]# rpm -qa httpdhttpd-2.2.15-39.el6.centos.x86_64[root@codeshit ~]# rpm -qa mysql[root@codeshit ~]# rpm -qa php 已经有apache了，缺php和mysql php和mysql的安装安装mysql12[root@codeshit ~]# yum install mysql mysql-server[root@codeshit ~]# /etc/init.d/mysqld start 安装php（注意：下面有更新，这版本有毒~~~）1234[root@codeshit ~]# yum install php #测试下[root@codeshit ~]# echo &quot;&lt;?php echo \\&quot;hello world~\\&quot;;?&gt;&quot; &gt; hello.php[root@codeshit ~]# php hello.php hello world~[root@codeshit ~]# 可以用，但是还要重启下apahce1[root@codeshit ~]# /etc/init.d/httpd restart 到这里查看下网站跟目录1[root@codeshit ~]# vim /etc/httpd/conf/httpd.conf 1[root@codeshit ~]# echo &quot;&lt;?php phpinfo(); ?&gt;&quot; &gt; /var/www/html/info.php 然后去浏览器上访问下http://ip/info.php如果显示正常，就配置的差不多了记得测试完了删掉它 安装owncloud安装一下必要的PHP扩展（我也不懂这些东西）1[root@codeshit html]# yum install php-mysql php-json php-xml php-mbstring php-zip php-gd curl php-curl php-pdo 亏的用的是vps，要是阿里云我晚上就不用睡觉了。。。 第一次使用mysql需要设置下密码1234567891011121314[root@codeshit etc]# mysql -u root -pEnter password: #直接按回车就行mysql&gt; use mysql;mysql&gt; select Host, User, Password from user;+-----------+------+----------+| Host | User | Password |+-----------+------+----------+| localhost | root | || codeshit | root | || 127.0.0.1 | root | || localhost | | || codeshit | | |+-----------+------+----------+ 空的可以。。。12mysql&gt; update user set password=PASSWORD(&apos;******&apos;) where user=&quot;root&quot;;mysql&gt; flush privileges; #很重要 然后就可以创建owncloud的数据库了123mysql&gt; CREATE DATABASE ownclouddb;mysql&gt; GRANT ALL ON ownclouddb.* TO ownclouduser@localhost IDENTIFIED BY &apos;*****&apos;;创建新的用户mysql&gt; flush privileges; # 刷新MySQL的系统权限相关表 ###下载解压放置owncloud文件略设置一下目录的所有权和权限12[root@codeshit html]# chown -R apache:apache /var/www/html/owncloud/[root@codeshit html]# chmod 777 /var/www/html/owncloud/config/ 启用apache重写模式。123vim /etc/httpd/conf/httpd.conf:%s/AllowOverride None/Allowoverride All/g #查找allowoverride none替换为allowoverride all 最后重启下apache和mysql 浏览器访问下，发现php版本不够，不够细心啊。。。还要更新php思路残暴，先卸载再安装1234# yum remove php*# rpm -Uvh http://repo.webtatic.com/yum/el6/latest.rpm # yum install php54w # yum install php54w-mysql php54w-json php54w-xml php54w-mbstring php54w-zip php54w-gd curl php54w-curl php54w-pdo 重启apache和mysql 刷新一下，能看到安装界面了，数据库什么的都建好了，所以安装很简单，就一步，不贴图了。 大功告成，1点了，哔了狗了。。。参考资料linux常用命令 http://cheneyph.iteye.com/blog/824746apache和httpd的关系 http://www.51testing.com/html/99/311499-807468.html快速在CentOS下搭建LAMP（Apache、MySQL、PHP）环境http://www.bootf.com/227.htmlmysql命令flush privileges http://kuiba.blog.51cto.com/2700551/777457CentOS下重置Mysql root密码 http://www.centoscn.com/CentOS/config/2014/0628/3215.htmlvim全局替换命令 http://andyss.blog.51cto.com/315552/131652centos下php 5.3升级到 php5.4版本 http://www.centoscn.com/image-text/config/2015/0819/6037.html在CentOS/RHEL 6.2上使用YUM安装PHP5.4 http://blog.csdn.net/uuleaf/article/details/7666935使用ownCloud在Linux安装你的个人云服务 https://linux.cn/article-2494-1.html","tags":[]},{"title":"centos更新python到2.7并下载网易云课堂课程(失败)","date":"2016-03-14T14:52:00.000Z","path":"2016/03/14/centos更新python到2.7并下载网易云课堂课程(失败)/","text":"centos更新python到2.7并下载网易云课堂课程(失败)标签（空格分隔）： linux 因为坑爹的校园网，在线看教程不方便，想下下来看，在网上找到这个神器https://github.com/renever/cn_mooc_dl然后运行时出现了下面的问题123456789[root@codeshit cn_mooc_dl-master]# python icourse163_dl.py -u xxxx@xxx.xxx -p xxxxx &quot;http://mooc.study.163.com/course/HIT-1000003009&quot; ᬯicourse163_dl.py:5: DeprecationWarning: the md5 module is deprecated; use hashlib instead import md5Traceback (most recent call last): File &quot;icourse163_dl.py&quot;, line 11, in &lt;module&gt; from utils import mkdir_p, resume_download_file, parse_args, clean_filename File &quot;/home/ftpuser/cn_mooc_dl/cn_mooc_dl-master/utils.py&quot;, line 12, in &lt;module&gt; import argparseImportError: No module named argparse 谷歌后发现是因为python版本不够1234[root@codeshit cn_mooc_dl-master]# python -c &quot;import argparse; print argparse&quot;Traceback (most recent call last): File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;ImportError: No module named argparse 然后就需要更新一下python版本 ###python版本更新1234567891011[root@codeshit python2.7]# wget https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tgz--2016-03-14 07:39:04-- https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tgzResolving www.python.org... 199.27.79.223Connecting to www.python.org|199.27.79.223|:443... connected.HTTP request sent, awaiting response... 200 OKLength: 16657930 (16M) [application/octet-stream]Saving to: `Python-2.7.9.tgz&apos;100%[==========================================================================================&gt;] 16,657,930 70.6M/s in 0.2s 2016-03-14 07:39:04 (70.6 MB/s) - `Python-2.7.9.tgz&apos; saved [16657930/16657930] 。。。这速度，爆阿里云一百条街还多12345678#安装出现的东西太多没记录，就几条命令[root@codeshit Python-2.7.9]# tar zxvf Python-2.7.9.tgz#./configure#make all #make install#make clean#make distclean 123[root@codeshit Python-2.7.9]# ll /usr/binlrwxrwxrwx 1 root root 6 Nov 26 11:36 python2 -&gt; python-rwxr-xr-x 2 root root 4864 Jan 22 2014 python2.6 现在python的软链还是指向2.6的，需要更改一下1234[root@codeshit Python-2.7.9]# mv /usr/bin/python /usr/bin/python2.6.6[root@codeshit Python-2.7.9]# ln -s /usr/local/bin/python2.7 /usr/bin/python[root@codeshit Python-2.7.9]# ll /usr/binlrwxrwxrwx 1 root root 24 Mar 14 08:05 python -&gt; /usr/local/bin/python2.7 已经完成12[root@codeshit Python-2.7.9]# python -VPython 2.7.9 资料上还说，更改python2.7后会出现yum不能用的问题，需要更改下1[root@codeshit Python-2.7.9]# vim /usr/bin/yum 将第一行1#!/usr/bin/python 改为1#!/usr/bin/python2.6.6 完成了，轻易更改版本可能出现n种问题，但这个vps主要是梯子，也没什么东西，就先这样吧。 好吧，刚刚试了下，对pip也要做出同样修改!!!!!又提示pip不够新，更新。。。。1[root@codeshit cn_mooc_dl-master]# pip install --upgrade pip 又提示123[root@codeshit cn_mooc_dl-master]# pip install requestsDEPRECATION: Python 2.6 is no longer supported by the Python core team, please upgrade your Python. A future version of pip will drop support for Python 2.6Requirement already satisfied (use --upgrade to upgrade): requests in /usr/lib/python2.6/site-packages 又玩回来了。。。有点明白了，是因为python2.6带的pip不够新，但我2.7的没有pip,自残试试12[root@codeshit cn_mooc_dl-master]# pip uninstall pip[root@codeshit cn_mooc_dl-master]# yum install python-pip 终于明白了，原来新的pip在/usr/local/bin/pip创建一个软链就可以了1[root@codeshit cn_mooc_dl]# ln -s /usr/local/bin/pip /usr/bin/pip ###下载学习教程1234567891011[root@codeshit cn_mooc_dl-master]# pip install -r requirements.txt[root@codeshit cn_mooc_dl-master]# python icourse163_dl.py -u xxxx@xxx.xxx -p xxxxxx &quot;http://mooc.study.163.com/course/HIT-1000003009&quot; --path /home/ftpuser/test/Login done...Parsing...............Traceback (most recent call last): File &quot;icourse163_dl.py&quot;, line 299, in &lt;module&gt; main() File &quot;icourse163_dl.py&quot;, line 134, in main syllabus = parse_syllabus_icourse163(session, r3.content) File &quot;icourse163_dl.py&quot;, line 276, in parse_syllabus_icourse163 info = dict(re.findall(r&quot;(?P&lt;name&gt;.*?):(?P&lt;value&gt;.*?),&quot;, s4.group(&apos;content&apos;)))AttributeError: &apos;NoneType&apos; object has no attribute &apos;group&apos; 怎么还不行，看了下知乎，说这玩意坏了，坏了，坏了。。。。。（凌乱中） 参考资料：https://www.zhihu.com/question/21202201http://blog.csdn.net/jcjc918/article/details/11022345https://blog.phpgao.com/pip-easy_install-setuptool.htmlhttp://stackoverflow.com/questions/15093444/importerror-no-module-named-argparse","tags":[]},{"title":"Hello World!","date":"2016-03-09T11:10:00.000Z","path":"2016/03/09/Hello World!/","text":"Hello World!标签（空格分隔）： typecho-杂物 &emsp;&emsp;听说在做第一件事的时候，写下Hello World!会带来好运~~~ &emsp;&emsp;前段时间总想自己写出一个博客来，但是，因为毫无美感，自己对前端也基本没什么了解，就没写成。刚刚在网上看了下前端的体系，太大，也太杂了，手里也没有什么好的资源和明确的路线，算了，不写了。 &emsp;&emsp;看手里还有点android视频，写写安卓去了，暂时用typecho搭一个用着，买的服务器，不用可惜了。 ###记录下typecho安装过程先吐槽下阿里云服务器的速度1234567[root@iZ281j3obvpZ typecho]# git clone https://github.com/typecho/typecho.gitCloning into &apos;typecho&apos;...remote: Counting objects: 7470, done.remote: Total 7470 (delta 0), reused 0 (delta 0), pack-reused 7470Receiving objects: 100% (7470/7470), 7.30 MiB | 35.00 KiB/s, done.Resolving deltas: 100% (4999/4999), done.Checking connectivity... done. 这速度。。。。。 发现目录重了，三条命令解决。123[root@iZ281j3obvpZ ~]# mv typecho typecho1[root@iZ281j3obvpZ ~]# mv typecho1/typecho typecho[root@iZ281j3obvpZ ~]# rm -rf ./typecho1 看下目录结构1234567891011121314[root@iZ281j3obvpZ ~]# cd typecho [root@iZ281j3obvpZ typecho]# lltotal 100drwxr-xr-x 6 root root 4096 Mar 9 17:13 admin-rw-r--r-- 1 root root 2135 Mar 9 17:13 changelog.txt-rw-r--r-- 1 root root 721 Mar 9 17:13 index.phpdrwxr-xr-x 2 root root 4096 Mar 9 17:13 install-rw-r--r-- 1 root root 47405 Mar 9 17:13 install.php-rw-r--r-- 1 root root 14974 Mar 9 17:13 license.txt-rw-r--r-- 1 root root 205 Mar 9 17:13 README.md-rw-r--r-- 1 root root 122 Mar 9 17:13 todo.txtdrwxr-xr-x 2 root root 4096 Mar 9 17:13 toolsdrwxr-xr-x 4 root root 4096 Mar 9 17:13 usrdrwxr-xr-x 5 root root 4096 Mar 9 17:13 var 1234567[root@iZ281j3obvpZ ~]# cd /alidata/www/[root@iZ281j3obvpZ www]# mv ~/typecho ./[root@iZ281j3obvpZ www]# chown .www /alidata/www/typecho -R #更改用户组[root@iZ281j3obvpZ www]# cp phpmyadmin ./typecho/ -R #移动phpmyadmin[root@iZ281j3obvpZ /]# cd /alidata/server/httpd/conf/vhosts/[root@iZ281j3obvpZ vhosts]# cp blog.conf typecho.conf #复制一份配置文件[root@iZ281j3obvpZ vhosts]# vim typecho.conf #将配置文件改一下，图不好弄，不贴了 发现打不开，懵逼半天，结果发现没重启apache12[root@iZ281j3obvpZ www]# /etc/init.d/httpd restartAH00112: Warning: DocumentRoot [/alidata/www/blog] does not exist 好像还要把其他的东西搞掉。。。以前因为blog.conf在phpwind.conf前面，没有注意。残暴的修改一下下123456789[root@iZ281j3obvpZ vhosts]# lltotal 12-rw-r--r-- 1 root root 650 Mar 2 19:11 blog.conf-rw-r--r-- 1 root root 665 Sep 13 22:29 phpwind.conf-rw-r--r-- 1 root root 665 Mar 9 17:43 typecho.conf[root@iZ281j3obvpZ vhosts]# mv blog.conf blog.conf.backup[root@iZ281j3obvpZ vhosts]# /etc/init.d/httpd restart[root@iZ281j3obvpZ vhosts]# mv phpwind.conf phpwind.conf.backup[root@iZ281j3obvpZ vhosts]# /etc/init.d/httpd restart 成功了，我真tm的机智。然后就是typecho的安装了，很简单参考http://docs.typecho.org/install 最后总有一天，我要自己写一个用 还有哔了狗了，因为没创建数据库又墨迹半天。","tags":[]}]